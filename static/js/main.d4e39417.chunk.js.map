{"version":3,"sources":["components/layout/AppLayout.tsx","api/videoApi.ts","config/config.ts","modules/videoModule.ts","components/SearchInput.tsx","components/Header.tsx","components/Player.tsx","util/count.ts","components/SelectVideo.tsx","components/VideoList.tsx","GlobalStyles.tsx","theme.ts","App.tsx","modules/userModule.ts","store/store.ts","reportWebVitals.js","index.tsx"],"names":["LayoutBlock","styled","div","theme","device","pc","AppLayout","children","getVideoAsync","url","a","axios","get","GOOGLE_ACCESS_KEY","getVideoSaga","searchVideoSaga","videoSaga","initialVideo","id","videoId","title","description","thumbnail","viewCount","likeCount","commentCount","initialState","loading","data","selected","error","videoSlice","createSlice","name","reducers","getVideo","state","searchVideo","action","getVideoSuccess","payload","getVideoError","setSelcted","call","response","items","map","item","idx","snippet","thumbnails","medium","statistics","put","type","console","log","urlBefore","responseBefore","itemsBefore","ids","join","actions","takeLatest","videoReducer","reducer","SearchBox","form","SearchInput","useState","input","setInput","dispatch","useDispatch","onSubmit","e","preventDefault","trim","value","onChange","target","icon","faSearch","HeaderLayout","header","MainHeader","Header","PlayerLayout","PlayerButton","button","OpenButton","PrevButton","PlayButton","NextButton","VolumeButton","VolumeBox","VolumeBar","volume","VideoBlock","isOpend","ProgressBarBox","ProgressBar","Player","useSelector","video","setIsOpend","isPlayed","setIsPlayed","volumeClicked","setvolumClicked","setVolume","volumeRef","useRef","youtubeRef","useEffect","current","internalPlayer","ref","onPlay","onPause","onReady","pauseVideo","opts","playerVars","autoplay","onClick","faEyeSlash","faEye","faVolumeOff","faVolumeUp","onMouseDown","onMouseUp","onMouseMove","width","clientWidth","mousePosition","clientX","offsetLeft","volumePercent","Math","round","onMouseLeave","prev","faStepBackward","faPause","playVideo","faPlay","next","isSearched","faStepForward","exchangeK","num","front","floor","rear","SelectVideoLayout","section","ThreeLineText","p","VideoContent","TextArea","VideoInfo","ul","ImageArea","Image","source","SelectVideo","length","parseInt","faHeart","faCommentAlt","ListLayout","VideoWrap","VideoImage","isSelected","VideoListBlock","slideX","VideoItem","li","VideoList","setSlideX","videoListRef","videoItem","querySelector","moveX","getBoundingClientRect","faChevronLeft","window","innerWidth","faChevronRight","GlobalStyles","createGlobalStyle","reset","deviceSizes","tablet","laptop","App","GET_USER","GET_USER_SUCCESS","GET_USER_ERROR","userReducer","rootSaga","customHistory","createBrowserHistory","sagaMiddleware","createSagaMiddleware","context","history","rootReducer","combineReducers","user","vedioReducer","store","createStore","applyMiddleware","all","fork","run","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4e39417.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype AppLayoutProps = {\r\n    children: React.ReactNode,\r\n}\r\n\r\nconst LayoutBlock = styled.div`\r\n    max-width: 1280px;\r\n    margin: 0 auto;\r\n    padding: 0 1.5rem;\r\n\r\n    @media ${({ theme }) => theme.device.pc} {\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nconst AppLayout = ({ children }: AppLayoutProps) => {\r\n    return (\r\n        <LayoutBlock>\r\n            {children}\r\n        </LayoutBlock>\r\n    )\r\n};\r\n\r\nexport default AppLayout;","import axios from \"axios\";\r\n\r\nexport const getVideoAsync = async (url: string) => {\r\n\r\n    return await axios.get(url);\r\n};\r\n","export const GOOGLE_ACCESS_KEY = 'AIzaSyAIQ6s02EUeXWjMKbfmROfmXK5G2v8JiaU';","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { getVideoAsync } from \"../api/videoApi\";\r\nimport { SearchVideo, VideoResponse } from \"../util/youtubeSearchUtil\";\r\nimport { GOOGLE_ACCESS_KEY } from \"../config/config\";\r\n\r\nexport const GET_VIDEO = 'GET_VIDEO';\r\nexport const GET_VIDEO_SUCCESS = 'GET_VIDEO_SUCCESS';\r\nexport const GET_VIDEO_ERROR = 'GET_VIDEO_ERROR';\r\n\r\n\r\nexport type Video = {\r\n    id: number,\r\n    videoId: string,\r\n    title: string,\r\n    description: string,\r\n    thumbnail: string,\r\n    viewCount: string,\r\n    likeCount: string,\r\n    commentCount: string\r\n}\r\n\r\nconst initialVideo = {\r\n    id: 0,\r\n    videoId: '',\r\n    title: '',\r\n    description: '',\r\n    thumbnail: '',\r\n    viewCount: '',\r\n    likeCount: '',\r\n    commentCount: ''\r\n}\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: { data: [initialVideo], selected: initialVideo },\r\n    error: null\r\n};\r\n\r\nconst videoSlice = createSlice({\r\n    name: 'video',\r\n    initialState,\r\n    reducers: {\r\n        getVideo: (state) => {\r\n            state.loading = true;\r\n            state.data.data = [initialVideo];\r\n            state.error = null;\r\n        },\r\n        searchVideo: (state, action) => {\r\n            state.loading = true;\r\n            state.data.data = [initialVideo];\r\n            state.error = null;\r\n        },\r\n        getVideoSuccess: (state, action: { payload: Video[] }) => {\r\n            state.loading = false;\r\n            state.data.data = action.payload;\r\n            state.error = null;\r\n        },\r\n        getVideoError: (state, action) => {\r\n            state.loading = false;\r\n            state.data.data = [];\r\n            state.error = action.payload;\r\n        },\r\n        setSelcted: (state, action) => {\r\n            state.data.selected = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nfunction* getVideoSaga() {\r\n    try {\r\n        const url = `https://www.googleapis.com/youtube/v3/videos?key=${GOOGLE_ACCESS_KEY}&part=snippet, statistics&chart=mostPopular&regionCode=KR&videoCategoryId=10&maxResults=20`;\r\n        const response: AxiosResponse<any> = yield call(getVideoAsync, url);\r\n        const items = response.data.items;\r\n\r\n        const payload = items.map((item: VideoResponse, idx: number): Video => {\r\n            return {\r\n                id: idx,\r\n                videoId: item.id,\r\n                title: item.snippet.title,\r\n                thumbnail: item.snippet.thumbnails.medium.url,\r\n                commentCount: item.statistics.commentCount,\r\n                description: item.snippet.description,\r\n                likeCount: item.statistics.likeCount,\r\n                viewCount: item.statistics.viewCount\r\n            }\r\n        });\r\n\r\n        yield put({ type: getVideoSuccess, payload });\r\n\r\n    } catch (e) {\r\n        yield put({ type: getVideoError, payload: e });\r\n    }\r\n}\r\n\r\nfunction* searchVideoSaga(action: { payload: string }) {\r\n    try {\r\n        console.log(action.payload);\r\n        const urlBefore = `https://www.googleapis.com/youtube/v3/search?key=${GOOGLE_ACCESS_KEY}&part=snippet&regionCode=KR&maxResults=20&type=video&videoCategoryId=10&q=${action.payload}`;\r\n        const responseBefore: AxiosResponse<any> = yield call(getVideoAsync, urlBefore);\r\n        const itemsBefore = responseBefore.data.items;\r\n\r\n        const ids = itemsBefore.map((item: SearchVideo) => item.id.videoId).join();\r\n        const url = `https://www.googleapis.com/youtube/v3/videos?key=${GOOGLE_ACCESS_KEY}&part=snippet, statistics&id=${ids}`;\r\n        const response: AxiosResponse<any> = yield call(getVideoAsync, url);\r\n        const items = response.data.items;\r\n\r\n\r\n        const payload = items.map((item: VideoResponse, idx: number): Video => {\r\n            return {\r\n                id: idx,\r\n                videoId: item.id,\r\n                title: item.snippet.title,\r\n                thumbnail: item.snippet.thumbnails.medium.url,\r\n                commentCount: item.statistics.commentCount,\r\n                description: item.snippet.description,\r\n                likeCount: item.statistics.likeCount,\r\n                viewCount: item.statistics.viewCount\r\n            }\r\n        });\r\n\r\n        yield put({ type: getVideoSuccess, payload });\r\n    } catch (e) {\r\n        yield put({ type: getVideoError, payload: e });\r\n    }\r\n}\r\n\r\nexport const {\r\n    getVideo,\r\n    searchVideo,\r\n    getVideoSuccess,\r\n    getVideoError,\r\n    setSelcted,\r\n} = videoSlice.actions;\r\n\r\nexport function* videoSaga() {\r\n    yield takeLatest(getVideo, getVideoSaga);\r\n    yield takeLatest(searchVideo, searchVideoSaga);\r\n}\r\n\r\nconst videoReducer = videoSlice.reducer;\r\nexport default videoReducer;","import { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { searchVideo } from '../modules/videoModule';\r\n\r\nconst SearchBox = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.3rem 1rem;\r\n    background: #fff;\r\n    border-radius: 100px;\r\n\r\n    input {\r\n        width: 15rem;\r\n        flex: 0 0 auto;\r\n        border: none;\r\n        outline: none;\r\n        background: rgba(255, 255, 255, 0);\r\n    }\r\n\r\n    button {\r\n        flex: 0 0 auto;\r\n        border: none;\r\n        outline: none;\r\n        background: inherit;\r\n        font-size: 1.2rem;\r\n        span {\r\n            display: block;\r\n            width: 0;\r\n            height: 0;\r\n            overflow: hidden;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchInput = () => {\r\n    const [input, setInput] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (input.trim() === '') return;\r\n        dispatch(searchVideo(input));\r\n    }\r\n\r\n    return (\r\n        <SearchBox onSubmit={onSubmit}>\r\n            <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} />\r\n            <button type=\"submit\"><span>검색</span><FontAwesomeIcon icon={faSearch} /></button>\r\n        </SearchBox>\r\n    );\r\n}\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AppLayout from './layout/AppLayout';\r\nimport SearchInput from './SearchInput';\r\n\r\nconst HeaderLayout = styled.header`\r\n    width: 100%;\r\n    background: #222;\r\n    margin-bottom: 2rem;\r\n`\r\n\r\nconst MainHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem 0;\r\n\r\n    h1 {\r\n        font-size: 2rem;\r\n        color: #fff;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderLayout>\r\n            <AppLayout>\r\n                <MainHeader>\r\n                    <h1>MUSICTUBE</h1>\r\n                    <SearchInput />\r\n                </MainHeader>\r\n            </AppLayout>\r\n        </HeaderLayout>\r\n    );\r\n};\r\n\r\nexport default Header;","import { faEye, faEyeSlash, faPause, faPlay, faStepBackward, faStepForward, faVolumeOff, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Rreact, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport YouTube from 'react-youtube';\r\nimport styled from 'styled-components';\r\nimport { setSelcted } from '../modules/videoModule';\r\nimport { RootState } from '../store/store';\r\n\r\nconst PlayerLayout = styled.div`\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 4rem;\r\n    padding: 0 2rem;\r\n    background: #222;\r\n`;\r\n\r\nconst PlayerButton = styled.button`\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    background: inherit;\r\n    border: none;\r\n    color: #fff;\r\n    &:hover {\r\n        color: #ccc;\r\n    }\r\n    span {\r\n        display: block;\r\n        width: 0;\r\n        height: 0;\r\n        overflow: hidden;\r\n    }\r\n`;\r\n\r\nconst OpenButton = styled(PlayerButton)`\r\n    \r\n`;\r\nconst PrevButton = styled(PlayerButton)``;\r\nconst PlayButton = styled(PlayerButton)``;\r\nconst NextButton = styled(PlayerButton)``;\r\nconst VolumeButton = styled(PlayerButton)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n`;\r\n\r\nconst VolumeBox = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 2rem;\r\n    margin-right: auto;\r\n    & > div {\r\n        width: 10rem;\r\n        height: 0.2rem;\r\n        background: #ccc;\r\n        border-radius: 100px;\r\n        overflow: hidden;\r\n        transition: 0.2s;\r\n        &:hover {\r\n            height: 1rem;\r\n        }\r\n        &:hover > div::after {\r\n            width: 1rem;\r\n            height: 1rem;\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\nconst VolumeBar = styled.div<{ volume: number }>`\r\n    position: relative;\r\n    text-indent: -9999px;\r\n    width: ${({ volume }) => volume}%;\r\n    height: 100%;\r\n    background: #ff1a40;\r\n    &::after {\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 0;\r\n        transform: translate(50%, -50%);\r\n        content: '';\r\n        width: 0.2rem;\r\n        height: 0.2rem;\r\n        background: #fff;\r\n        border-radius: 50%;\r\n        opacity: 0;\r\n        transition: 0.2s;\r\n    }\r\n`;\r\n\r\nconst VideoBlock = styled.div<{ isOpend: boolean }>`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #222;\r\n    z-index: -1;\r\n    transform: ${({ isOpend }) => isOpend ? 'translateY(0)' : 'translateY(100%)'};\r\n    transition: 0.3s;\r\n\r\n    & > div {\r\n        width: 100%;\r\n        height: 70%;\r\n        iframe {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ProgressBarBox = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 0.2rem;\r\n    background: #ccc;\r\n`;\r\nconst ProgressBar = styled.div``;\r\n\r\n\r\nconst Player = () => {\r\n    const { loading, data, error } = useSelector((state: RootState) => state.video);\r\n    const [isOpend, setIsOpend] = useState(false);\r\n    const [isPlayed, setIsPlayed] = useState(false);\r\n    const [volumeClicked, setvolumClicked] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const dispatch = useDispatch();\r\n    const volumeRef = useRef<HTMLDivElement>(null);\r\n    const youtubeRef = useRef<any>(null);\r\n\r\n    const volumeHandler = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!volumeRef.current || !volumeClicked) return;\r\n        const width = volumeRef.current.clientWidth;\r\n        const mousePosition = e.clientX - volumeRef.current.offsetLeft;\r\n        const volumePercent = Math.round(mousePosition / width * 100);\r\n        setVolume(volumePercent);\r\n    }\r\n\r\n    const onReady = () => {\r\n        if (!youtubeRef.current) return;\r\n        youtubeRef.current.internalPlayer.pauseVideo();\r\n    }\r\n\r\n    const prevMusic = () => {\r\n        const current = data.selected.id;\r\n        const prev = current - 1;\r\n\r\n        if (prev < 0) {\r\n            dispatch(setSelcted(data.data[20]));\r\n        } else {\r\n            dispatch(setSelcted(data.data[prev]));\r\n        }\r\n    }\r\n\r\n    const nextMusic = () => {\r\n        const current = data.selected.id;\r\n        const next = current + 1;\r\n        const isSearched = data.selected !== data.data[data.selected.id];\r\n\r\n        console.log(isSearched);\r\n\r\n        if (next > 20 || isSearched) {\r\n            dispatch(setSelcted(data.data[0]));\r\n        } else {\r\n            dispatch(setSelcted(data.data[next]));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!youtubeRef.current) return;\r\n        youtubeRef.current.internalPlayer.setVolume(volume);\r\n    }, [volume]);\r\n\r\n    return (\r\n        <PlayerLayout>\r\n            <VideoBlock isOpend={isOpend}>\r\n                <YouTube\r\n                    ref={youtubeRef}\r\n                    videoId={data.selected.videoId}\r\n                    onPlay={() => setIsPlayed(true)}\r\n                    onPause={() => setIsPlayed(false)}\r\n                    onReady={onReady}\r\n                    opts={{\r\n                        playerVars: {\r\n                            autoplay: 1\r\n                        }\r\n                    }}\r\n                />\r\n            </VideoBlock>\r\n            <ProgressBarBox>\r\n                <ProgressBar></ProgressBar>\r\n            </ProgressBarBox>\r\n            <OpenButton><span>영상열기</span>{isOpend ? <FontAwesomeIcon onClick={() => setIsOpend(false)} icon={faEyeSlash} /> : <FontAwesomeIcon onClick={() => setIsOpend(true)} icon={faEye} />}</OpenButton>\r\n            <VolumeBox>\r\n                <VolumeButton onClick={() => volume === 0 ? setVolume(100) : setVolume(0)}><span>볼륨 on/off</span><FontAwesomeIcon icon={volume === 0 ? faVolumeOff : faVolumeUp} /></VolumeButton>\r\n                <div\r\n                    ref={volumeRef}\r\n                    onMouseDown={() => setvolumClicked(true)}\r\n                    onMouseUp={() => setvolumClicked(false)}\r\n                    onMouseMove={volumeHandler}\r\n                    onMouseLeave={() => setvolumClicked(false)}\r\n                >\r\n                    <VolumeBar volume={volume}>{volume}</VolumeBar>\r\n                </div>\r\n            </VolumeBox>\r\n            <div>\r\n                <PrevButton onClick={prevMusic}><span></span><FontAwesomeIcon icon={faStepBackward} /></PrevButton>\r\n                {\r\n                    !isPlayed\r\n                        ? <PlayButton onClick={() => youtubeRef.current.internalPlayer.playVideo()}><span></span><FontAwesomeIcon icon={faPlay} /></PlayButton>\r\n                        : <PlayButton onClick={() => youtubeRef.current.internalPlayer.pauseVideo()}><span></span><FontAwesomeIcon icon={faPause} /></PlayButton>\r\n                }\r\n                <NextButton onClick={nextMusic}><span></span><FontAwesomeIcon icon={faStepForward} /></NextButton>\r\n            </div>\r\n        </PlayerLayout>\r\n    )\r\n}\r\n\r\nexport default Player;","export const exchangeK = (num: number): string => {\r\n    const front = Math.floor(num / 1000);\r\n    const rear = num % 1000;\r\n\r\n    return `${front}.${rear}K`;\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AppLayout from './layout/AppLayout';\r\nimport { faCommentAlt, faEye, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Video } from '../modules/videoModule';\r\nimport { exchangeK } from '../util/count';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store/store';\r\n\r\nconst SelectVideoLayout = styled.section`\r\n    width: 100%;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst ThreeLineText = styled.p`\r\n    white-space: normal; \r\n    line-height: 1.4; \r\n    height: 4.4em; \r\n    text-align: left;\r\n    word-wrap: break-word; \r\n    display: -webkit-box; \r\n    -webkit-line-clamp: 3; \r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst VideoContent = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n`;\r\n\r\nconst TextArea = styled.div`\r\n    width: 50%;\r\n    color: #fff;\r\n    h2 {\r\n        font-size: 3rem;\r\n        margin-bottom: 1.5rem;\r\n        white-space: normal;\r\n        line-height: 1.2;\r\n        height: 2.4em; \r\n        text-align: left;\r\n        word-wrap: break-word;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 2; \r\n        -webkit-box-orient: vertical;\r\n        overflow: hidden;\r\n    }\r\n`;\r\n\r\nconst VideoInfo = styled.ul`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n    li {\r\n        span {\r\n            margin-left: 0.5rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ImageArea = styled.div`\r\n    width: 32rem;\r\n    height: 20rem;\r\n    background: #ccc;\r\n`;\r\n\r\nconst Image = styled.div<{ source: string }>`\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url('${({ source }) => source}') no-repeat center center;\r\n    background-size: cover;\r\n`;\r\n\r\nconst SelectVideo = () => {\r\n    const { loading, data, error } = useSelector((state: RootState) => state.video);\r\n\r\n    if (loading) return <SelectVideoLayout>로딩중...</SelectVideoLayout>;\r\n    if (error) return <SelectVideoLayout>에러발생</SelectVideoLayout>;\r\n    if (data.data.length === 0) return <SelectVideoLayout>검색결과가 없음</SelectVideoLayout>;\r\n\r\n    return (\r\n        <SelectVideoLayout>\r\n            <AppLayout>\r\n                <VideoContent>\r\n                    <TextArea>\r\n                        <h2>{data.selected.title}</h2>\r\n                        <VideoInfo>\r\n                            <li>\r\n                                <FontAwesomeIcon icon={faEye} />\r\n                                <span>{exchangeK(parseInt(data.selected.viewCount))}</span>\r\n                            </li>\r\n                            <li>\r\n                                <FontAwesomeIcon icon={faHeart} />\r\n                                <span>{exchangeK(parseInt(data.selected.likeCount))}</span>\r\n                            </li>\r\n                            <li>\r\n                                <FontAwesomeIcon icon={faCommentAlt} />\r\n                                <span>{exchangeK(parseInt(data.selected.commentCount))}</span>\r\n                            </li>\r\n                        </VideoInfo>\r\n                        <ThreeLineText>\r\n                            {data.selected.description}\r\n                        </ThreeLineText>\r\n                    </TextArea>\r\n                    <ImageArea>\r\n                        <Image source={data.selected.thumbnail} />\r\n                    </ImageArea>\r\n                </VideoContent>\r\n            </AppLayout>\r\n        </SelectVideoLayout>\r\n    );\r\n};\r\n\r\nexport default SelectVideo;","import { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { getVideo, setSelcted, Video } from '../modules/videoModule';\r\nimport { RootState } from '../store/store';\r\nimport SelectVideo from './SelectVideo';\r\n\r\nconst ListLayout = styled.section`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    color: #fff;\r\n    overflow: hidden;\r\n\r\n    &:hover button {\r\n        opacity: 1;\r\n    }\r\n\r\n    button {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        border: none;\r\n        outline: none;\r\n        background: none;\r\n        font-size: 2rem;\r\n        color: #fff;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        opacity: 0;\r\n        transition: transform 0.3s, opacity 0.3s;\r\n        span {\r\n            display: block;\r\n            width: 0;\r\n            height: 0;\r\n            overflow: hidden;\r\n        }\r\n        &:hover {\r\n            transform: scale(1.3);\r\n        }\r\n        &:not(:last-child) {\r\n            left: 1rem;\r\n        }\r\n        &:last-child {\r\n            right: 1rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst VideoWrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst VideoImage = styled.div<{ thumbnail: string, isSelected?: boolean }>`\r\n    background: url('${({ thumbnail }) => thumbnail}') no-repeat center center;\r\n    background-size: cover;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: ${({ isSelected }) => isSelected && '5px solid #fff'};\r\n    transition: transform 0.3s;\r\n`;\r\n\r\nconst VideoListBlock = styled.ul<{ slideX: number }>`\r\n     display: flex;\r\n     transform: translateX(-${({ slideX }) => slideX}px);\r\n     transition: transform 0.3s;\r\n`;\r\n\r\nconst VideoItem = styled.li<{ isSelected?: boolean }>`\r\n    position: relative;\r\n        flex: 0 0 auto;\r\n        width: 20rem;\r\n        height: 12rem;\r\n        padding: 0 0.5rem;\r\n        overflow: hidden;\r\n        border: ${({ isSelected }) => isSelected && '3px solid #fff'};\r\n        h3 {\r\n            position: absolute;\r\n            bottom: 0;\r\n            width: 100%;\r\n            padding: 1rem;\r\n            background: rgba(0, 0, 0, 0.6);\r\n            transform: translateY(100%);\r\n            transition: transform 0.3s;\r\n        }\r\n\r\n        &:hover {\r\n            h3 {\r\n                transform: translateY(0%);\r\n            }\r\n            ${VideoImage} {\r\n                transform: scale(1.2);\r\n            }\r\n        }\r\n`;\r\n\r\nconst VideoList = () => {\r\n    const [slideX, setSlideX] = useState(0);\r\n    const { loading, data, error } = useSelector((state: RootState) => state.video);\r\n    const dispatch = useDispatch();\r\n    const videoListRef = useRef<HTMLUListElement>(null);\r\n\r\n    const onSlideRight = () => {\r\n        const videoItem = videoListRef.current?.querySelector('li');\r\n        if (!videoItem) return;\r\n        let moveX = videoItem.getBoundingClientRect().width;\r\n\r\n        if (slideX + moveX > (data.data.length * moveX) - window.innerWidth) {\r\n            moveX = 0;\r\n        }\r\n\r\n        setSlideX(slideX => slideX + moveX);\r\n    }\r\n    const onSlideLeft = () => {\r\n        const videoItem = videoListRef.current?.querySelector('li');\r\n        if (!videoItem) return;\r\n        let moveX = videoItem.getBoundingClientRect().width;\r\n\r\n        if (slideX - moveX < 0) {\r\n            moveX = 0;\r\n        }\r\n\r\n        setSlideX(slideX => slideX - moveX);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getVideo());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (data.data.length === 0) return;\r\n        setSlideX(0);\r\n    }, [data.data]);\r\n\r\n    useEffect(() => {\r\n        if (data.selected.videoId === '') {\r\n            dispatch(setSelcted(data.data[0]));\r\n        }\r\n    }, [data, dispatch]);\r\n\r\n    if (loading) return <ListLayout>로딩중...</ListLayout>;\r\n    if (error) return <ListLayout>에러발생</ListLayout>;\r\n    if (data.data.length === 0) return <ListLayout>검색결과가 없음</ListLayout>;\r\n\r\n    return (\r\n        <ListLayout>\r\n            <VideoListBlock slideX={slideX} ref={videoListRef}>\r\n                {\r\n                    data.data.map((video: Video, idx: number) => {\r\n                        return (\r\n                            <VideoItem onClick={() => dispatch(setSelcted(data.data[idx]))} isSelected={video.videoId === data.selected.videoId} key={idx}>\r\n                                <VideoWrap>\r\n                                    <VideoImage thumbnail={video.thumbnail}></VideoImage>\r\n                                </VideoWrap>\r\n                                <h3>{video.title}</h3>\r\n                            </VideoItem>\r\n                        );\r\n                    })\r\n                }\r\n            </VideoListBlock>\r\n            <button onClick={onSlideLeft}><span>왼쪽으로</span><FontAwesomeIcon icon={faChevronLeft} /></button>\r\n            <button onClick={onSlideRight}><span>오른쪽으로</span><FontAwesomeIcon icon={faChevronRight} /></button>\r\n        </ListLayout>\r\n    );\r\n}\r\n\r\nexport default VideoList;","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset}\r\n    body {\r\n        background: #111;\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","const deviceSizes = {\r\n    tablet: '768px',\r\n    laptop: '1024px',\r\n    pc: '1300px',\r\n}\r\n\r\nconst device = {\r\n    tablet: `screen and (min-width: ${deviceSizes.tablet})`,\r\n    laptop: `screen and (min-width: ${deviceSizes.laptop})`,\r\n    pc: `screen and (min-width: ${deviceSizes.pc})`,\r\n}\r\n\r\nconst theme = {\r\n    device\r\n}\r\n\r\nexport default theme;","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Header from './components/Header';\nimport Player from './components/Player';\nimport SelectVideo from './components/SelectVideo';\nimport VideoList from './components/VideoList';\nimport GlobalStyles from './GlobalStyles';\nimport theme from './theme';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Header />\n      <SelectVideo />\n      <VideoList />\n      <Player />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","export const GET_USER = 'GET_USER';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const GET_USER_ERROR = 'GET_USER_ERROR';\r\n\r\ntype User = {\r\n    name: string,\r\n    profileImg: string,\r\n}\r\ntype UserState = {\r\n    loading: boolean,\r\n    data: User | null,\r\n    error: any\r\n}\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: null,\r\n    error: null\r\n};\r\n\r\nconst userReducer = (state: UserState = initialState, action: any): UserState => {\r\n    switch (action.type) {\r\n        case GET_USER:\r\n            return {\r\n                loading: true,\r\n                data: null,\r\n                error: null\r\n            };\r\n        case GET_USER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                data: action.payload,\r\n                error: null\r\n            }\r\n        case GET_USER_ERROR:\r\n            return {\r\n                loading: false,\r\n                data: null,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport { combineReducers } from 'redux';\r\nimport createSagaMiddleware from '@redux-saga/core';\r\nimport { createBrowserHistory } from 'history';\r\nimport userReducer from '../modules/userModule';\r\nimport vedioReducer from '../modules/videoModule'\r\nimport { all, fork } from 'redux-saga/effects';\r\nimport { videoSaga } from '../modules/videoModule';\r\n\r\nconst customHistory = createBrowserHistory();\r\nconst sagaMiddleware = createSagaMiddleware({\r\n    context: {\r\n        history: customHistory,\r\n    }\r\n})\r\n\r\nconst rootReducer = combineReducers({ user: userReducer, video: vedioReducer });\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nfunction* rootSaga() {\r\n    yield all([\r\n        fork(videoSaga),\r\n    ]);\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store/store';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}